Problem Statement:
Company maintains employee information as employee ID, name, designation and salary. Allow
user to add, delete information of employee. Display information of particular employee. If
employee does not exist an appropriate message is displayed. If it is, then the system displays
the employee details. Use index sequential file to maintain the data.


#include<iostream>
#include<iomanip>
using namespace std;
#define max 10
struct employee {
 string name;
 long int employee_id;
 string designation;
 int salary;
};
int num = -1;
employee emp[max];
void insert()
{
 if (num < max) {

 num++;
 cout << "Enter the information of the Employee\n";
 cout << "Employee ID: ";
 cin >> emp[num].employee_id;
 cout << "Name: ";
 cin >> emp[num].name;
 cout << "Designation: ";
 cin >> emp[num].designation;
 cout<<"Salary: ";
 cin>>emp[num].salary;
 }
 else {
 cout << "Employee Table Full\n";
 }
}
void deleteIndex(int i)
{
 for (int j = i; j < num; j++) {
 emp[j].name = emp[j + 1].name;
 emp[j].employee_id = emp[j + 1].employee_id;
 emp[j].designation = emp[j + 1].designation;
 emp[j].salary = emp[j +1].salary;
 }
 return;
}
void displayAllRecords(){
 if(num == -1){
 cout<<"No records present!\n";
 return;
 }
 else{
 cout<<endl<<setw(5)<<"ID"<<setw(10)<<"NAME"<<setw(18)<<"DESIGNATION"<<setw(10)<<"SALARY\n";
 for(int i=0; i<num+1; i++){
 cout<<setw(5)<<emp[i].employee_id<<setw(10)<<emp[i].name<<setw(18)<<emp[i].designation<<setw(10)<<emp[i].salary<<endl;

 }
 }
}
// Function to delete record
void deleteRecord()
{
 int employee_id;
 cout << "Enter the Employee ID to Delete Record: ";
 cin >> employee_id;
 for (int i = 0; i < num+1; i++) {
 if (emp[i].employee_id == employee_id) {
 deleteIndex(i);
 num--;
 break;
 }
 }
 }
void searchRecord()
{
 int employee_id;
 cout << "Enter the Employee ID to Search Record: ";
 cin >> employee_id;
 for (int i = 0; i < num+1; i++) {
 if (emp[i].employee_id == employee_id) {
 cout<<endl<<setw(5)<<"ID"<<setw(10)<<"NAME"<<setw(18)<<"DESIGNATION"<<setw(10)<<"SALARY\n";
 cout<<setw(5)<<emp[i].employee_id<<setw(10)<<emp[i].name<<setw(18)<<emp[i].designation<<setw(10)<<emp[i].salary<<endl;

 return;
 }

 }
 cout<<"Employee record not found.\n";
}

int main()
{
 int option = 0;
 while(option != 5){
 cout << "\n----- Employee Management System -----\n";
 cout << "1. Insert New Record\n";
 cout << "2. Display all Records\n";
 cout << "3. Delete Record\n";
 cout << "4. Search Record by Employee ID\n";
 cout << "5. Exit\n";
 cout<<"Enter your choice: ";
 cin >> option;
 switch(option){
 case 1:
 	insert();
 break;
 case 2:
 displayAllRecords();
 break;
 case 3:
 deleteRecord();
 break;
 case 4:
 searchRecord();
 break;
 case 5:
 cout<<"\n***** You have exited *****\n";
 break;
 default:
 cout<<"Enter valid option!\n";
 break;
 }

 }
 return 0;
}


Output:

1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 1
Enter the information of the Employee
Employee ID: 121
Name: Jeff
Designation: CEO
Salary: 700000

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 1
Enter the information of the Employee
Employee ID: 221
Name: John
Designation: COO
Salary: 550000

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 1
Enter the information of the Employee
Employee ID: 321
Name: Elon
Designation: CFO
Salary: 450000

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 1
Enter the information of the Employee
Employee ID: 421
Name: Warren
Designation: CMO
Salary: 400000

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 2

   ID      NAME       DESIGNATION   SALARY
  121      Jeff               CEO    700000
  221      John               COO    550000
  321      Elon               CFO    450000
  421    Warren               CMO    400000

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 3
Enter the Employee ID to Delete Record: 421

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 4
Enter the Employee ID to Search Record: 121

   ID      NAME       DESIGNATION   SALARY
  121      Jeff               CEO    700000

----- Employee Management System -----
1. Insert New Record
2. Display all Records
3. Delete Record
4. Search Record by Employee ID
5. Exit
Enter your choice: 5

***** You have exited *****

--------------------------------
Process exited after 242.4 seconds with return value 0
Press any key to continue . . .
